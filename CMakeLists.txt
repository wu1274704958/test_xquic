cmake_minimum_required(VERSION 3.20.0)
project(test_quic VERSION 0.1.0)
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
if(CMAKE_CXX_COMPILER_ID MATCHES MSVC)
  add_compile_options("/permissive-")
endif()

if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
	add_definitions(-DWIN32_LEAN_AND_MEAN)
	set(OTH_LIBRARY ws2_32.lib)
elseif(CMAKE_SYSTEM_NAME STREQUAL "Android")
	add_definitions(-DPF_ANDROID)
	set(OTH_LIBRARY "android" "log")
endif()
message("CMAKE_SYSTEM_NAME = ${CMAKE_SYSTEM_NAME}")
set(CMAKE_CXX_STANDARD 20)

set(COMM_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include")

find_package(ZLIB REQUIRED)
find_package(boringssl REQUIRED)
find_package(lsquic CONFIG REQUIRED)
find_package(asio CONFIG)
find_package(libuv CONFIG REQUIRED)
find_package(toml11 CONFIG REQUIRED)
find_package(easyloggingpp REQUIRED)
if(asio_FOUND)
	add_definitions(-DHAS_ASIO)
	add_subdirectory(src/test_ser)
	add_subdirectory(src/test_client)
endif()
add_subdirectory(src/echo_ser)
add_subdirectory(src/echo_client)
add_subdirectory(mqas)
if(BUILD_MQAS_EXAMPLES)
	add_subdirectory(examples/recv_test)
	add_subdirectory(examples/send_test)
	add_subdirectory(examples/recv_file)
	add_subdirectory(examples/send_datagram)
	add_subdirectory(examples/recv_datagram)
endif()
